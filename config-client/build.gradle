/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '17-2-23 ����4:34' with Gradle 2.14
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'idea'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.springframework.cloud:spring-cloud-starter-config:+'
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.1.RELEASE'

    // 将配置在eureka中注册成为服务
    compile 'org.springframework.cloud:spring-cloud-starter-eureka:+'

    // 添加spring-cloud-starter-bus-amqp模块
    // 效果更好的是将bus放在配置中心，这个各个服务节点都是公平的
    compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp:+'

    // 添加 git 配置信息随时刷的问题
    // 在config-clinet的pom.xml中新增spring-boot-starter-actuator监控模块，其中包含了/refresh刷新API。
    compile 'org.springframework.boot:spring-boot-starter-actuator:+'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE'

}
