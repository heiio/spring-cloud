/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '17-2-23 ����4:34' with Gradle 2.14
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        maven { url "http://repo.spring.io/libs-milestone" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.springframework.boot:spring-boot-starter-amqp:1.5.1.RELEASE'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE'

}

///////////////war方式打包//////////////////////

//war {
//    baseName = 'eureka-server'
//    version = '1.0.0'
//}

//////////////////jar//////////////////

jar {
    baseName = 'eureka-server'
    version = '1.0.0'
}
jar.into('META-INF/resources') {
    from('src/main/webapp')
}

////////////////////////////////////////
